{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"#generic-content","title":"Generic Content","text":"plaintextUnorfered listOrderd ListPython List <p>This is some plaon text </p> <ul> <li>firts </li> <li>second </li> <li>third </li> </ul> <ol> <li>first</li> <li>second</li> <li>third item </li> </ol> Hello.py<pre><code>print(\"Hello Python\")\n</code></pre> <p>Title of the callout</p> <p>hello world</p> Title of info <p>hello world</p>"},{"location":"DataStructTemplete/","title":"DataStructTemplete","text":"<p>\u4ee5\u4e0b\u6a21\u677f\u7686\u7531C\u8a9e\u8a00\u5be6\u4f5c</p>"},{"location":"DataStructTemplete/#binary-search-tree","title":"Binary Search Tree","text":"<pre><code>#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n\nstruct BST{\n    struct BST *left;\n    struct BST *right;\n    int val;\n};\ntypedef struct BST BST;\n\nBST* MinValueNode(BST* root){\n    BST* current = root;\n    while(current &amp;&amp; current -&gt;left != NULL){\n        current = current-&gt;left;\n    }\n    return current;\n}\n\nBST* searchNode(BST* root, int data) {\n    if (root == NULL || root-&gt;val == data) {\n        return root;\n    }\n    if (data &lt; root-&gt;val) {\n        return searchNode(root-&gt;left, data);\n    } else {\n        return searchNode(root-&gt;right, data);\n    }\n}\n\n\nBST* deleteNode(BST *root,int n){\n    if(root == NULL)return root;\n    if(n &lt; root-&gt;val){\n        root-&gt;left = deleteNode(root-&gt;left,n);\n    }else if(n &gt; root-&gt;val){\n        root-&gt;right = deleteNode(root-&gt;right,n);\n    }\n    else{\n        if(root-&gt;left == NULL){\n            BST* nextNode = root-&gt;right;\n            free(root);\n            return nextNode;    \n        }else if(root-&gt;right == NULL){\n            BST* nextNode = root-&gt;left;\n            free(root);\n            return nextNode;\n        }\n        BST *SuccessorNode = MinValueNode(root-&gt;right);\n        root-&gt;val = SuccessorNode-&gt;val;\n        root-&gt;right = deleteNode(root-&gt;right,SuccessorNode-&gt;val);\n    }\n    return root;\n}\n\n\n\nBST* insertNode(BST *root,int n){\n    if(root == NULL){\n        BST* newNode = (BST *)malloc(sizeof(BST));\n        newNode-&gt;val = n;\n        newNode-&gt;left = NULL;\n        newNode-&gt;right = NULL;\n        root = newNode;\n        return root;\n    }\n    if( n &gt; root -&gt;val){\n        root-&gt;right = insertNode(root-&gt;right,n);\n    }else if(n &lt; root-&gt;val){\n        root-&gt;left = insertNode(root-&gt;left,n);\n    }\n    return root;\n}\n\nvoid PrintTree(BST *root){\n    if(root == NULL)return;\n    PrintTree(root-&gt;left);\n    printf(\"%d \",root-&gt;val);\n    PrintTree(root-&gt;right);\n}\n\nint main(){\n    BST *root = NULL;\n    root = insertNode(root,1);\n    root = insertNode(root,5);\n    root = insertNode(root,10);\n    root = insertNode(root,100);\n    root = insertNode(root,25);\n\n    root = deleteNode(root,10);\n\n    PrintTree(root);\n\n\n}\n</code></pre>"},{"location":"DataStructTemplete/#disjoint-set","title":"Disjoint set","text":"<pre><code>struct Disjoint_set{\n    int d[MAXNUM],num[MAXNUM];\n    void array_set(int n){\n        for(int i=1;i&lt;=n;i++){\n            d[i]=i;\n            num[i]=1;\n        }\n    }\n    int find(int n){\n        if(n!=d[n]){\n            return d[n]=find(d[n]);\n        }else{\n            return n;\n        }\n    }\n    int Union(int x,int y){\n        x=find(x);\n        y=find(y);\n        if(x==y)return 0;\n        if(num[x]&gt;num[y])swap(x,y);\n        num[y]+=num[x];\n        d[x]=y;\n        return 1;\n    }\n}DS;\n</code></pre>"},{"location":"Reversing-kr/","title":"\u984c\u76ee\u7e3d\u89bd","text":"<ul> <li>Easy Crack</li> <li>Easy Keygen</li> <li>Easy Unpack</li> </ul>","tags":["Reverse","Writeup"]},{"location":"Reversing-kr/#easy-crack-100","title":"Easy Crack: 100","text":"","tags":["Reverse","Writeup"]},{"location":"Reversing-kr/#_2","title":"\u5206\u6790","text":"<p>\u6253\u958b\u4e4b\u5f8c\u6703\u5f48\u51fa\u4e00\u500b\u8996\u7a97\uff0c\u8981\u4f7f\u7528\u8005\u8f38\u5165\u6587\u5b57</p>","tags":["Reverse","Writeup"]},{"location":"Reversing-kr/#_3","title":"\u9006\u5411","text":"<p>\u958b\u555fghidra\u5206\u6790\uff0c\u4f7f\u7528search-&gt;strings</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u572800406044\u4f4d\u7f6e\u6709\u4e00\u500bCongratulation!!\u5b57\u4e32 \u8ddf\u9032\u53bb\u770b\u4f7f\u7528\u4ed6\u7684\u51fd\u793a <pre><code>void FUN_00401080(HWND param_1)\n\n{\n  byte bVar1;\n  byte *pbVar2;\n  int iVar3;\n  char *pcVar4;\n  undefined4 *puVar5;\n  bool bVar6;\n  char local_64;\n  char local_63;\n  char cStack_62;\n  byte abStack_61 [97];\n\n  local_64 = '\\0';\n  puVar5 = (undefined4 *)&amp;local_63;\n  for (iVar3 = 0x18; iVar3 != 0; iVar3 = iVar3 + -1) {\n    *puVar5 = 0;\n    puVar5 = puVar5 + 1;\n  }\n  *(undefined2 *)puVar5 = 0;\n  *(undefined *)((int)puVar5 + 2) = 0;\n  GetDlgItemTextA(param_1,1000,&amp;local_64,100);\n  if (local_63 == 'a') {\n    iVar3 = _strncmp(&amp;local_63 + 1,&amp;DAT_00406078,2);\n    if (iVar3 == 0) {\n      pcVar4 = s_AGR3versing_0040606a;\n      pbVar2 = (byte *)(&amp;local_63 + 3);\n      do {\n        pcVar4 = (char *)((byte *)pcVar4 + 2);\n        bVar1 = *pbVar2;\n        bVar6 = bVar1 &lt; (byte)*pcVar4;\n        if (bVar1 != *pcVar4) {\nLAB_00401102:\n          iVar3 = (1 - (uint)bVar6) - (uint)(bVar6 != 0);\n          goto LAB_00401107;\n        }\n        if (bVar1 == 0) break;\n        bVar1 = pbVar2[1];\n        bVar6 = bVar1 &lt; ((byte *)pcVar4)[1];\n        if (bVar1 != ((byte *)pcVar4)[1]) goto LAB_00401102;\n        pbVar2 = pbVar2 + 2;\n      } while (bVar1 != 0);\n      iVar3 = 0;\nLAB_00401107:\n      if ((iVar3 == 0) &amp;&amp; (local_64 == 'E')) {\n        MessageBoxA(param_1,s_Congratulation_!!_00406044,s_EasyCrackMe_00406058,0x40);\n        EndDialog(param_1,0);\n        return;\n      }\n    }\n  }\n  MessageBoxA(param_1,s_Incorrect_Password_00406030,s_EasyCrackMe_00406058,0x10);\n  return;\n}\n</code></pre> \u767c\u73fe\u4ed6\u662f\u5728\u62ff\u6211\u5011\u4f7f\u7528\u8457\u7684\u8f38\u5165\u53bb\u6bd4\u5c0d\uff0c\u8f38\u5165\u6b63\u78ba\u6703\u4f7f\u7528MessageBoxA\u51fa\u73feCongratulation!! \u5c07\u51fd\u793a\u6574\u7406\u4e00\u4e0b \u53ef\u4ee5\u5148\u5c07 <pre><code>char local_64;\n  char local_63;\n  char cStack_62;\n  byte abStack_61 [97];\n</code></pre> \u5408\u4f75\u6210</p> <pre><code>char user_input [100];\n</code></pre> <p>\u53e6\u5916\u539f\u53cd\u7de8\u8b6fs_AGR3versing_0040606a\u8ddf\u53cd\u7d44\u8b6f\u904e\u5f8c\u662f\u4e0d\u540c\u7684\uff0c\u56e0\u6b64\u9700\u8981\u5c070040606a\u4f4d\u7f6e\u7684\u8cc7\u6599\u624b\u52d5\u66f4\u65b0</p> <p>GetDlgItemTextA : \u64f7\u53d6\u5c0d\u8a71\u65b9\u584a\u4e2d\u63a7\u5236\u9805\u76f8\u95dc\u806f\u7684\u6a19\u984c\u6216\u6587\u5b57\u3002 <pre><code>UINT GetDlgItemTextA(\n  [in]  HWND  hDlg,\n  [in]  int   nIDDlgItem,\n  [out] LPSTR lpString,\n  [in]  int   cchMax\n);  \n</code></pre></p> <pre><code>void FUN_00401080(HWND param_1)\n\n{\n  byte bVar1;\n  byte *pbVar2;\n  int i;\n  char *pcVar3;\n  undefined4 *puVar4;\n  bool bVar5;\n  char user_input [100];\n\n  user_input[0] = '\\0';\n  puVar4 = (undefined4 *)(user_input + 1);\n  for (i = 0x18; i != 0; i = i + -1) {\n    *puVar4 = 0;\n    puVar4 = puVar4 + 1;\n  }\n  *(undefined2 *)puVar4 = 0;\n  *(undefined *)((int)puVar4 + 2) = 0;\n  GetDlgItemTextA(param_1,1000,user_input,100);\n  if (user_input[1] == 'a') {\n    i = _strncmp(user_input + 2,5y_DAT_00406078,2);\n    if (i == 0) {\n      pcVar3 = s_R3versing_0040606c;\n      pbVar2 = (byte *)(user_input + 4);\n      do {\n        bVar1 = *pbVar2;\n        bVar5 = bVar1 &lt; (byte)*pcVar3;\n        if (bVar1 != *pcVar3) {\nLAB_00401102:\n          i = (1 - (uint)bVar5) - (uint)(bVar5 != 0);\n          goto LAB_00401107;\n        }\n        if (bVar1 == 0) break;\n        bVar1 = pbVar2[1];\n        bVar5 = bVar1 &lt; ((byte *)pcVar3)[1];\n        if (bVar1 != ((byte *)pcVar3)[1]) goto LAB_00401102;\n        pbVar2 = pbVar2 + 2;\n        pcVar3 = (char *)((byte *)pcVar3 + 2);\n      } while (bVar1 != 0);\n      i = 0;\nLAB_00401107:\n      if ((i == 0) &amp;&amp; (user_input[0] == 'E')) {\n        MessageBoxA(param_1,s_Congratulation_!!_00406044,s_EasyCrackMe_00406058,0x40);\n        EndDialog(param_1,0);\n        return;\n      }\n    }\n  }\n  MessageBoxA(param_1,s_Incorrect_Password_00406030,s_EasyCrackMe_00406058,0x10);\n  return;\n}\n</code></pre> <p>\u56e0\u6b64\u53ef\u4ee5\u63a8\u65b7user input\u5167\u5bb9\u6703\u662f user_input[0] = 'E' user_input[1] = 'a' user_input[2-3] = \"5y\" user_input[4-12] = \"R3versing\" \u9a57\u8b49\u4e4b\u5f8c\u5373\u70ba\u7b54\u6848</p> <p>flag : Ea5yR3versing</p>","tags":["Reverse","Writeup"]},{"location":"Reversing-kr/#easy-keygen-100","title":"Easy Keygen: 100","text":"","tags":["Reverse","Writeup"]},{"location":"Reversing-kr/#_4","title":"\u5206\u6790","text":"<p>\u6709\u4e00\u500bReadme.txt\uff0c\u5167\u5bb9\u70ba <pre><code>ReversingKr KeygenMe\nFind the Name when the Serial is 5B134977135E7D13\n</code></pre> Easy Keygen.exe\u57f7\u884c\u5f8c\u9700\u8981\u8f38\u5165\u4e00\u500binput \u8207serial</p>","tags":["Reverse","Writeup"]},{"location":"Reversing-kr/#_5","title":"\u9006\u5411","text":"<p>\u4f7f\u7528ida \u5206\u6790exe <pre><code>int __cdecl main(int argc, const char **argv, const char **envp)\n{\n  signed int v3; // ebp\n  int i; // esi\n  char v6; // [esp+Ch] [ebp-130h]\n  char v7[2]; // [esp+Dh] [ebp-12Fh] BYREF\n  char v8[100]; // [esp+10h] [ebp-12Ch] BYREF\n  char Buffer[197]; // [esp+74h] [ebp-C8h] BYREF\n  __int16 v10; // [esp+139h] [ebp-3h]\n  char v11; // [esp+13Bh] [ebp-1h]\n\n  memset(v8, 0, sizeof(v8));\n  memset(Buffer, 0, sizeof(Buffer));\n  v10 = 0;\n  v11 = 0;\n  v6 = 16;\n  qmemcpy(v7, \" 0\", sizeof(v7));\n  sub_4011B9((int)aInputName);\n  scanf(\"%s\", v8);\n  v3 = 0;\n  for ( i = 0; v3 &lt; (int)strlen(v8); ++i )\n  {\n    if ( i &gt;= 3 )\n      i = 0;\n    sprintf(Buffer, \"%s%02X\", Buffer, v8[v3++] ^ v7[i - 1]);  // v7[i - 1]\u6709\u89e3\u932f\u61c9\u70bav7[i]\n  }\n  memset(v8, 0, sizeof(v8));\n  sub_4011B9((int)aInputSerial);\n  scanf(\"%s\", v8);\n  if ( !strcmp(v8, Buffer) )\n    sub_4011B9((int)aCorrect);\n  else\n    sub_4011B9((int)aWrong);\n  return 0;\n}\n</code></pre> \u53ef\u4ee5\u89c0\u5bdf\u5230\u4ed6\u5148\u5c07\u4f7f\u7528\u8005\u8f38\u5165\u7684\u6587\u5b57\u4e00\u500b\u4e00\u500b\u53d6\u51fa\u4f86\u5c0d\u4e00\u500bkeys[0x10,0x20,0x30]\u505axor\uff0c\u6700\u5f8c\u518d\u53d6\u5f97\u7528\u8005\u8f38\u5165\u7684serial\u6bd4\u5c0d\u662f\u5426\u76f8\u540c\uff0c\u56e0\u70ba\u984c\u76ee\u6709\u63d0\u4f9b\u6b63\u78ba\u7b54\u6848xor\u5f8c\u7684serial\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528xor\u6027\u8ceaa^b=c,b^c=a\u53cd\u5beb\u56de\u53bb\u5f97\u5230\u7b54\u6848</p> <p>chal.py <pre><code>def generate_correct_serial(input_name):\n    v7 = [0x10,0x20,0x30]\n    Buffer = \"\" \n    i = 0\n    v3 = 0\n    result = [input_name[i:i+2] for i in range(0, len(input_name), 2)]\n\n    for h in result:\n        Buffer += chr(int(h,16) ^ v7[i])\n        i+=1\n        if(i &gt;=3):\n            i = 0\n    print(Buffer)\ninput_name = \"5B134977135E7D13\"  # \u5047\u8a2d\u9019\u662f\u6211\u5011\u7684\u8f38\u5165\u540d\u7a31\ngenerate_correct_serial(input_name)\n</code></pre></p> <p>flag:K3yg3nm3</p>","tags":["Reverse","Writeup"]},{"location":"Reversing-kr/#easy-unpack-100","title":"Easy Unpack: 100","text":"<p>\u6839\u64da\u984c\u76ee\u540d\u7a31\u61c9\u8a72\u662f\u4e00\u500b\u9700\u8981\u812b\u6bbc\u7684\u984c\u76ee\uff0c\u5148\u4e1f\u5165PEiD\u770b\u770b</p> <p></p> <p>\u767c\u73fe\u5230\u6709\u52a0\u6bbc\uff0c\u4f46\u4e0d\u77e5\u9053\u662f\u4ec0\u9ebc\u6bbc\uff0c\u53e6\u5916\u5728Readme.txt\u4e2d\u6709\u8aaa\u8981\u627e\u5230OEP(Orginal Entry Point)\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528ida \u6216 gdb \u5206\u6790\u3002</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230loc_40A1FB\uff0c\u6709\u4e00\u500b\u5927\u8df3\u8d8a\uff0c\u8df3\u5230loc_401150\uff0c\u9019\u5f88\u50cf\u812b\u6bbc\u5f8c\u7684\u6a23\u5b50\uff0c\u53ef\u4ee5\u731c\u6e2c0x00401150\u5c31\u662fOriginal Entry Point\u3002\u53ef\u4ee5\u7528x32dbg\u9a57\u8b49\uff0c\u57280040A1FB\u4e0b\u65b7\u9ede</p> <p></p> <p>F7\u8ffd\u9032\u53bb\u4e4b\u5f8c\u767c\u73fe\u57280x00401150\u7684\u5730\u65b9\u670955(push ebp)\uff0c\u56e0\u6b640x00401150\u5c31\u662fOEP</p> <p></p> <p>flag : 00401150</p>","tags":["Reverse","Writeup"]},{"location":"picoCTF-Problems/","title":"PicoCTF-reverse-allproblems","text":"<p>EASY : * Transformation * vault-door-training</p> <p>HARD :  * not crypto * No-Way_Out</p>","tags":["picoCTF","Reverse","Writeup"]},{"location":"picoCTF-Problems/#transformation","title":"Transformation","text":"<p>Difficulty : Easy picoCTF\u9023\u7d50 Description</p> <p>I wonder what this really is... enc ''.join([chr((ord(flag[i]) &lt;&lt; 8) + ord(flag[i + 1])) for i in range(0, len(flag), 2)])</p>","tags":["picoCTF","Reverse","Writeup"]},{"location":"picoCTF-Problems/#_1","title":"\u89c0\u5bdf","text":"<pre><code>enc ''.join([chr((ord(flag[i]) &lt;&lt; 8) + ord(flag[i + 1])) for i in range(0, len(flag), 2)])\n</code></pre> <p>\u9019\u6bb5\u7a0b\u5f0f\u78bc\u770b\u8d77\u4f86\u5c07\u4e00\u6bb5\u6587\u5b57\u7de8\u6210\u4e86\u5176\u4ed6\u7de8\u78bc\uff0c\u4e1f\u9032\u53bbCyberChef\u9078\u64c7magic\u81ea\u5075\u6e2c\u7684\u65b9\u5f0f\u5373\u53ef\u62ff\u5230flag CyberChef&amp;input=54Gp5o2v5I2U5Jm744S25b2i5qW0542f5qWu542044y05pGf5r2m5by45by345Wk45C446S45om9&amp;oenc=65001)</p> <p>flag:</p> <p>picoCTF{16_bits_inst34d_of_8_75d4898b}</p>","tags":["picoCTF","Reverse","Writeup"]},{"location":"picoCTF-Problems/#vault-door-training","title":"vault-door-training","text":"<p>Difficulty : Easy</p> <p>picoCTF\u9023\u7d50 Description</p> <p>Your mission is to enter Dr. Evil's laboratory and retrieve the blueprints for his Doomsday Project. The laboratory is protected by a series of locked vault doors. Each door is controlled by a computer and requires a password to open. Unfortunately, our undercover agents have not been able to obtain the secret passwords for the vault doors, but one of our junior agents obtained the source code for each vault's computer! You will need to read the source code for each level to figure out what the password is for that vault door. As a warmup, we have created a replica vault in our training facility. The source code for the training vault is here: VaultDoorTraining.java</p>","tags":["picoCTF","Reverse","Writeup"]},{"location":"picoCTF-Problems/#_2","title":"\u89c0\u5bdf","text":"<p>\u6253\u958bVaultDoorTraining.java\u5f8c\u767c\u73fe\u4ed6\u5728checkPassword\u51fd\u5f0f\u4e2d\u76f4\u63a5\u5c07\u73a9\u5bb6\u7684\u8f38\u5165\u8207w4rm1ng_Up_w1tH_jAv4_3808d338b46\u505a\u6bd4\u5c0d\uff0c\u76f8\u540c\u6551\u56de\u50b3Access granted <pre><code>public boolean checkPassword(String password) {\n    return password.equals(\"w4rm1ng_Up_w1tH_jAv4_3808d338b46\");\n}\n</code></pre></p> <p>\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u7d44\u51faflag</p> <p>flag:</p> <p>picoCTF{w4rm1ng_Up_w1tH_jAv4_3808d338b46}</p>","tags":["picoCTF","Reverse","Writeup"]},{"location":"picoCTF-Problems/#not-crypto","title":"not crypto","text":"<p>Difficulty : hard</p> <p>picoCTF\u9023\u7d50 Description</p> <p>there's crypto in here but the challenge is not crypto... \ud83e\udd14</p>","tags":["picoCTF","Reverse","Writeup"]},{"location":"picoCTF-Problems/#_3","title":"\u89c0\u5bdf","text":"<p>\u57f7\u884c\u904e\u5f8c\u6703\u8981\u4f7f\u7528\u8005\u8f38\u5165\u6771\u897f\uff0c\u4e1f\u5165ida\u767c\u73fe\u5230\u4e2d\u9593\u6709\u4e00\u5927\u4e32\u7684\u64cd\u4f5c\uff0c\u6700\u5f8c\u6709\u4e00\u500bmemcmp\u53bb\u6bd4\u8f03\u5169\u500b\u5b57\u4e32\uff0c\u6709\u53ef\u80fd\u662f\u6bd4\u8f03\u6211\u5011\u8f38\u5165\u7684\u5b57\u4e32\u8207\u7a0b\u5f0f\u64cd\u4f5c\u904e\u5f8c\u7684\u5b57\u4e32\u505a\u6bd4\u8f03\uff0c\u56e0\u6b64\u53ef\u4ee5\u4e0b\u65b7\u9ede\u5728memcpy\u4e0a\u9762\u4e26\u89c0\u5bdf\u50b3\u5165\u7684\u53c3\u6578</p>","tags":["picoCTF","Reverse","Writeup"]},{"location":"picoCTF-Problems/#solve","title":"solve","text":"<p>flag:</p> <p>picoCTF{c0mp1l3r_0pt1m1z4t10n_15_pur3_w1z4rdry_but_n0_pr0bl3m?}</p>","tags":["picoCTF","Reverse","Writeup"]},{"location":"picoCTF-Problems/#no_way_out","title":"No_Way_Out","text":"<p>Difficulty : hard</p> <p>picoCTF\u9023\u7d50 Description</p> <p>Put this flag in standard picoCTF format before submitting. If the flag was h1_1m_7h3_f14g submit picoCTF{h1_1m_7h3_f14g} to the platform.Windows game, Mac game Use password <code>picoctf</code> to unzip archives.</p>","tags":["picoCTF","Reverse","Writeup"]},{"location":"picoCTF-Problems/#_4","title":"\u89c0\u5bdf","text":"<p>\u5148\u7528detect it easy \u89c0\u5bdf\u4e00\u4e0b  \u6c92\u6bbc \u4f7f\u7528C/C++</p> <p>\u9032\u5165\u904a\u6232\u5f8c\u5728\u756b\u9762\u7684\u6700\u4e0a\u65b9\u6709hint\u63d0\u793a:Escape to find the flag  \u722c\u4e0a\u68af\u5b50\u5f8c\u88ab\u7246\u64cb\u4f4f\uff0c\u56e0\u6b64\u76ee\u6a19\u662f\u8981\u901a\u904e\u7246\u524d\u5f80\u65d7\u5b50\u7684\u5730\u65b9 \u53ef\u80fd\u53ef\u4ee5\u8003\u616e\u4ee5\u4e0b\u89e3\u6cd5 * \u66f4\u6539\u73a9\u5bb6\u8df3\u8e8d\u7684\u529f\u80fd * \u66f4\u6539\u89f8\u767cflag\u7684\u689d\u4ef6 * \u77ac\u79fb\u5230\u7246\u58c1\u5916\u9762</p>","tags":["picoCTF","Reverse","Writeup"]},{"location":"picoCTF-Problems/#solve_1","title":"Solve","text":"","tags":["picoCTF","Reverse","Writeup"]},{"location":"picoCTF-Problems/#dnspy","title":"\u89e3\u6cd5\u4e00: dnspy","text":"<p>\u901b\u4e00\u4e0b\u904a\u6232\u8cc7\u6599\u593e\uff0c\u767c\u73fe\u6709\u4e00\u500b\u6a94\u6848\u540d\u70ba</p> <p>/pico_Data/Managed/Assembly-Csharp.dll</p> <p>\u770b\u6a94\u6848\u540d\u53ef\u4ee5\u731c\u6e2c\u4e3b\u8981\u7684\u904a\u6232\u7a0b\u5f0f\u5167\u5bb9\uff0c\u6211\u5011\u9700\u8981\u6539\u7684\u5167\u5bb9\u6703\u5728\u9019\u88e1 \u6253\u958bdnspy \u4e26\u5c07Assembly-Csharp.dll\u4e1f\u9032\u53bb</p> <p>\u76ee\u6a19\u662f\u8981\u6539\u8b8a\u73a9\u5bb6\u7684\u8df3\u8e8d\u529f\u80fd \u56e0\u6b64\u8981\u5728\u88e1\u9762\u627e\u5230\u8655\u7406\u8df3\u8e8d\u529f\u80fd\u7684\u7a0b\u5f0f\u78bc \u7ffb\u627e\u4e00\u4e0b\u6703\u767c\u73fe\u662f\u5728EvolveGames-&gt;PlayerController\u7684update()\u51fd\u5f0f\u4e2d</p> <p></p> <p>\u5176\u4e2d\u6709\u4e00\u500b\u689d\u4ef6\u5f88\u660e\u986f\u662f\u8655\u7406\u8df3\u8e8d\u529f\u80fd <pre><code>if (Input.GetButton(\"Jump\") &amp;&amp; this.canMove &amp;&amp; this.characterController.isGrounded &amp;&amp; !this.isClimbing)\n{\n    this.moveDirection.y = this.jumpSpeed;\n}\nelse\n{\n    this.moveDirection.y = y;\n}\n</code></pre> \u9019\u88e1\u6709\u5169\u500b\u89e3\u6cd5 1. \u589e\u52a0\u8df3\u8e8d\u6578\u503c</p> <p>code: <pre><code>if (Input.GetButton(\"Jump\") &amp;&amp; this.canMove &amp;&amp; this.characterController.isGrounded &amp;&amp; !this.isClimbing)\n{\n    this.moveDirection.y = this.jumpSpeed + 20f;\n}\nelse\n{\n    this.moveDirection.y = y;\n}\n</code></pre> \u8b93\u73a9\u5bb6\u4e00\u8df3\u5c31\u8df3\u5f88\u9ad8</p> <p>DEMO: </p> <ol> <li>\u522a\u9664\u9650\u5236\u689d\u4ef6</li> </ol> <pre><code>if (Input.GetButton(\"Jump\"))\n{\n    this.moveDirection.y = this.jumpSpeed;\n}\nelse\n{\n    this.moveDirection.y = y;\n}\n</code></pre> <p>\u8b93\u73a9\u5bb6\u53ef\u4ee5\u5728\u7a7a\u4e2d\u9023\u7e8c\u8df3</p> <p>DEMO: </p> <p>\u53e6\u5916\uff0c\u4e5f\u53ef\u4ee5\u6ce8\u610f\u5230\u5728APTX\u7684 class\u4e2d\u6709\u4e00\u500b\u689d\u4ef6 <pre><code>if (collision.gameObject == this.player)\n{\n    this.Mysterious.SetActive(true);\n}\n</code></pre> \u9019\u500b\u689d\u4ef6\u7684\u611f\u89ba\u5f88\u50cf\u662f\u5982\u679c\u4e00\u500b\u6771\u897f\u78b0\u5230\u73a9\u5bb6\u5f8c\uff0c\u6703\u5c07\u4e00\u500bMysterious\u8a2d\u6210true \u53ef\u4ee5\u731c\u6e2c\u662f\u5982\u679c\u73a9\u5bb6\u78b0\u5230\u65d7\u5b50\u4e4b\u5f8c\u7684\u7a0b\u5f0f \u56e0\u6b64\u53ef\u4ee5\u7de8\u8f2f\u9019\u500bclass \u65b0\u589e\u4e00\u500bstart\u51fd\u5f0f\uff0c\u8b93\u904a\u6232\u57f7\u884c\u7684\u6642\u5019\u5c31\u5c07Mysterious\u8a2d\u6210true <pre><code>using System;\nusing UnityEngine;\n\n// Token: 0x02000002 RID: 2\npublic class APTX : MonoBehaviour\n{\n    // Token: 0x06000001 RID: 1\n    private void OnTriggerEnter(Collider collision)\n    {\n        if (collision.gameObject == this.player)\n        {\n            this.Mysterious.SetActive(true);\n        }\n    }\n\n    // Token: 0x06000002 RID: 2\n    public APTX()\n    {\n    }\n\n    // Token: 0x0600003A RID: 58\n    public void Start()\n    {\n        this.Mysterious.SetActive(true);\n    }\n\n    // Token: 0x04000001 RID: 1\n    public GameObject player;\n\n    // Token: 0x04000002 RID: 2\n    public GameObject Mysterious;\n}\n</code></pre></p> <p>DEMO: </p>","tags":["picoCTF","Reverse","Writeup"]},{"location":"picoCTF-Problems/#cheatengine","title":"\u89e3\u6cd5\u4e8c: CheatEngine","text":"<p>\u4f7f\u7528cheatEngin\u7372\u5f97\u73a9\u5bb6\u4f4d\u7f6e\u7684\u8a18\u61b6\u9ad4\u4f4d\u7f6e\uff0c\u4fee\u6539\u6389\u6578\u503c\u9054\u6210\u7a7f\u7246 \u53c3\u8003\u5f71\u7247</p> <p>flag:</p> <p>picoCTF{WELCOME_TO_UNITY!!}</p>","tags":["picoCTF","Reverse","Writeup"]}]}